/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/views/sections/collection/collection.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/views/sections/collection/collection.js":
/*!*****************************************************!*\
  !*** ./src/views/sections/collection/collection.js ***!
  \*****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _collection_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collection.scss */ \"./src/views/sections/collection/collection.scss\");\n/* harmony import */ var _snippets_collection_filters_collection_filters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @snippets/collection-filters/collection-filters */ \"./src/views/snippets/collection-filters/collection-filters.js\");\n/* harmony import */ var _snippets_collection_filters_collection_filters__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_snippets_collection_filters_collection_filters__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _snippets_collection_active_filters_collection_active_filters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @snippets/collection-active-filters/collection-active-filters */ \"./src/views/snippets/collection-active-filters/collection-active-filters.js\");\n/* harmony import */ var _snippets_collection_active_filters_collection_active_filters__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_snippets_collection_active_filters_collection_active_filters__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _snippets_collection_sorting_collection_sorting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @snippets/collection-sorting/collection-sorting */ \"./src/views/snippets/collection-sorting/collection-sorting.js\");\n/* harmony import */ var _snippets_collection_sorting_collection_sorting__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_snippets_collection_sorting_collection_sorting__WEBPACK_IMPORTED_MODULE_3__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// Import CSS\n // Snippets\n\n\n\n\n\n(function () {\n  if (typeof window.customElements.get('filtered-collection-display') !== 'undefined') {\n    return;\n  }\n\n  window.customElements.define('filtered-collection-display', /*#__PURE__*/function (_HTMLElement) {\n    _inherits(FilteredCollectionDisplay, _HTMLElement);\n\n    var _super = _createSuper(FilteredCollectionDisplay);\n\n    // eslint-disable-line\n    function FilteredCollectionDisplay() {\n      var _this;\n\n      _classCallCheck(this, FilteredCollectionDisplay);\n\n      _this = _super.call(this);\n      _this.handle = _this.getAttribute('data-filtered-collection-display');\n      _this.path = _this.getAttribute('data-url');\n\n      if (!_this.handle || !_this.path) {\n        return _possibleConstructorReturn(_this);\n      }\n\n      _this.sectionId = _this.getAttribute('data-section-id');\n      _this.parentContainerSelector = '[data-filtered-collection-display]';\n      _this.parentContainerEl = document.querySelector(_this.parentContainerSelector);\n      _this.lastFocusedEl = null;\n      _this.fetchResponseCache = [];\n\n      _this.setParamStringsFromUrl(window.location.href);\n\n      _this.initListeners();\n\n      return _this;\n    }\n\n    _createClass(FilteredCollectionDisplay, [{\n      key: \"setParamStringsFromUrl\",\n      value: function setParamStringsFromUrl(url) {\n        var searchParams = new URL(url).searchParams;\n        this.sortSearchString = searchParams.has('sort_by') ? \"sort_by=\".concat(searchParams.get('sort_by')) : '';\n        this.pageSearchString = searchParams.has('page') ? \"page=\".concat(searchParams.get('page')) : '';\n        searchParams[\"delete\"]('sort_by');\n        searchParams[\"delete\"]('page');\n        this.filterSearchString = searchParams.toString();\n      }\n    }, {\n      key: \"handleFilterUpdate\",\n      value: function handleFilterUpdate(filterFormdataString, event) {\n        this.filterSearchString = filterFormdataString;\n        this.pageSearchString = '';\n        this.updateDisplay({\n          event: event\n        });\n      }\n    }, {\n      key: \"handleSortUpdate\",\n      value: function handleSortUpdate(sortFormdataString) {\n        console.log('sort!');\n        this.sortSearchString = sortFormdataString;\n        this.pageSearchString = '';\n        this.updateDisplay();\n      }\n    }, {\n      key: \"handleUrlChange\",\n      value: function handleUrlChange(url) {\n        var pushState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        this.setParamStringsFromUrl(url);\n        this.updateDisplay({\n          pushState: pushState\n        });\n      }\n    }, {\n      key: \"initListeners\",\n      value: function initListeners() {\n        var _this2 = this;\n\n        window.addEventListener('popstate', function () {\n          _this2.handleUrlChange(window.location.href, false);\n        });\n      }\n    }, {\n      key: \"updateDisplay\",\n      value: function () {\n        var _updateDisplay = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n          var _ref$pushState, pushState, _ref$event, event, params, url, resDom;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _ref$pushState = _ref.pushState, pushState = _ref$pushState === void 0 ? true : _ref$pushState, _ref$event = _ref.event, event = _ref$event === void 0 ? null : _ref$event;\n                  params = [this.filterSearchString, this.sortSearchString, this.pageSearchString].filter(function (params) {\n                    return params.length !== 0;\n                  }).join('&');\n                  this.classList.add('collection-display-loading');\n                  url = \"\".concat(this.path, \"?\").concat(params);\n                  _context.next = 6;\n                  return this.fetchCollection(\"\".concat(url, \"&section_id=\").concat(this.sectionId));\n\n                case 6:\n                  resDom = _context.sent;\n                  this.updateActiveFilterLinks(resDom);\n                  this.updateFilterFacets(resDom, event);\n                  this.updateSortings(resDom);\n                  this.updateCollectionDisplay(resDom);\n                  this.updatePaginationDisplay(resDom);\n                  this.classList.remove('collection-display-loading');\n                  window.scrollTo({\n                    top: 0,\n                    left: 0,\n                    behaviour: 'smooth'\n                  });\n\n                  if (pushState) {\n                    window.history.pushState({}, '', url);\n                  }\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function updateDisplay(_x) {\n          return _updateDisplay.apply(this, arguments);\n        }\n\n        return updateDisplay;\n      }()\n    }, {\n      key: \"updateFilterFacets\",\n      value: function updateFilterFacets(resDom) {\n        var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var eventFilterFacet = event ? event.target.closest('[data-filter-facet]') : null;\n        var eventFacetIndex = eventFilterFacet ? eventFilterFacet.dataset.index : null;\n        var parentFiltersEls = document.querySelectorAll(\"[data-collection-filter=\\\"\".concat(this.handle, \"\\\"]\"));\n        var resParentFiltersEls = resDom.querySelectorAll(\"[data-collection-filter=\\\"\".concat(this.handle, \"\\\"]\"));\n        parentFiltersEls.forEach(function (parentFiltersEl) {\n          var filterFacetEls = parentFiltersEl.querySelectorAll('[data-filter-facet]');\n\n          var matchingResParentFilterEl = _toConsumableArray(resParentFiltersEls).find(function (resFilterParentEl) {\n            return resFilterParentEl.dataset.filterId === parentFiltersEl.dataset.filterId;\n          });\n\n          filterFacetEls.forEach(function (filterFacetEl) {\n            if (eventFacetIndex && filterFacetEl.dataset.index === eventFacetIndex) {\n              return;\n            }\n\n            var matchingResFacetEl = matchingResParentFilterEl.querySelector(\"[data-filter-facet][data-index=\\\"\".concat(filterFacetEl.dataset.index, \"\\\"]\"));\n            filterFacetEl.classList.toggle('d-none', !matchingResFacetEl);\n\n            if (!matchingResFacetEl) {\n              return;\n            }\n\n            filterFacetEl.querySelector('[data-accordion-content]').innerHTML = matchingResFacetEl.querySelector('[data-accordion-content]').innerHTML;\n          });\n        });\n      }\n    }, {\n      key: \"updateActiveFilterLinks\",\n      value: function updateActiveFilterLinks(resDom) {\n        var activeFiltersEls = document.querySelectorAll(\"[data-active-filters=\\\"\".concat(this.handle, \"\\\"]\"));\n        var resActiveFiltersEl = resDom.querySelector(\"[data-active-filters=\\\"\".concat(this.handle, \"\\\"]\"));\n        activeFiltersEls.forEach(function (activeFiltersEl) {\n          activeFiltersEl.innerHTML = resActiveFiltersEl.innerHTML;\n        });\n      }\n    }, {\n      key: \"updateSortings\",\n      value: function updateSortings(resDom) {\n        var resSortings = resDom.querySelectorAll(\"[data-collection-sorting=\\\"\".concat(this.handle, \"\\\"]\"));\n        var sortings = document.querySelectorAll(\"[data-collection-sorting=\\\"\".concat(this.handle, \"\\\"]\"));\n        sortings.forEach(function (sorting, index) {\n          if (typeof resSortings[index] === 'undefined') {\n            return;\n          }\n\n          sorting.innerHTML = resSortings[index].innerHTML;\n        });\n      }\n    }, {\n      key: \"updateCollectionDisplay\",\n      value: function updateCollectionDisplay(resDom) {\n        var resGrids = resDom.querySelectorAll(\"[data-filtered-collection-display=\\\"\".concat(this.handle, \"\\\"]\"));\n        var grids = document.querySelectorAll(\"[data-filtered-collection-display=\\\"\".concat(this.handle, \"\\\"]\"));\n        grids.forEach(function (grid, index) {\n          if (typeof resGrids[index] === 'undefined') {\n            return;\n          }\n\n          grid.innerHTML = resGrids[index].innerHTML;\n        });\n      }\n    }, {\n      key: \"updatePaginationDisplay\",\n      value: function updatePaginationDisplay(resDom) {\n        var resPaginationEls = resDom.querySelectorAll(\"[data-collection-pagination=\\\"\".concat(this.handle, \"\\\"]\"));\n        var paginationEls = document.querySelectorAll(\"[data-collection-pagination=\\\"\".concat(this.handle, \"\\\"]\"));\n        paginationEls.forEach(function (paginationEl, index) {\n          if (typeof resPaginationEls[index] === 'undefined') {\n            return;\n          }\n\n          paginationEl.innerHTML = resPaginationEls[index].innerHTML;\n        });\n      }\n    }, {\n      key: \"fetchCollection\",\n      value: function () {\n        var _fetchCollection = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(url) {\n          var responseHtml, cachedResponse, responseDOMParser, responseDocument;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  responseHtml = null;\n                  cachedResponse = this.fetchResponseCache.find(function (res) {\n                    return res.url === url;\n                  });\n\n                  if (!cachedResponse) {\n                    _context2.next = 6;\n                    break;\n                  }\n\n                  responseHtml = cachedResponse.html;\n                  _context2.next = 10;\n                  break;\n\n                case 6:\n                  _context2.next = 8;\n                  return fetch(url).then(function (response) {\n                    return response.text();\n                  }).then(function (html) {\n                    return html;\n                  })[\"catch\"](function (err) {\n                    console.error(err);\n                    return null;\n                  });\n\n                case 8:\n                  responseHtml = _context2.sent;\n                  this.fetchResponseCache.push({\n                    url: url,\n                    html: responseHtml\n                  });\n\n                case 10:\n                  responseDOMParser = new window.DOMParser();\n                  responseDocument = responseDOMParser.parseFromString(responseHtml, 'text/html');\n                  return _context2.abrupt(\"return\", responseDocument);\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        function fetchCollection(_x2) {\n          return _fetchCollection.apply(this, arguments);\n        }\n\n        return fetchCollection;\n      }()\n    }]);\n\n    return FilteredCollectionDisplay;\n  }( /*#__PURE__*/_wrapNativeSuper(HTMLElement)));\n})();\n\n(function () {\n  if (typeof window.customElements.get('collection-pagination') !== 'undefined') {\n    return;\n  }\n\n  window.customElements.define('collection-pagination', /*#__PURE__*/function (_HTMLElement2) {\n    _inherits(FilteredCollectionDisplay, _HTMLElement2);\n\n    var _super2 = _createSuper(FilteredCollectionDisplay);\n\n    // eslint-disable-line\n    function FilteredCollectionDisplay() {\n      var _this3;\n\n      _classCallCheck(this, FilteredCollectionDisplay);\n\n      _this3 = _super2.call(this);\n      _this3.collectionEl = document.querySelector('filtered-collection-display');\n      _this3.linkEls = _this3.querySelectorAll('a');\n\n      if (_this3.collectionEl && _this3.linkEls.length) {\n        _this3.init();\n      }\n\n      return _this3;\n    }\n\n    _createClass(FilteredCollectionDisplay, [{\n      key: \"init\",\n      value: function init() {\n        var _this4 = this;\n\n        this.linkEls.forEach(function (linkEl) {\n          linkEl.addEventListener('click', function (event) {\n            event.preventDefault();\n\n            _this4.collectionEl.handleUrlChange(linkEl.href);\n          });\n        });\n      }\n    }]);\n\n    return FilteredCollectionDisplay;\n  }( /*#__PURE__*/_wrapNativeSuper(HTMLElement)));\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/views/sections/collection/collection.js\n");

/***/ }),

/***/ "./src/views/sections/collection/collection.scss":
/*!*******************************************************!*\
  !*** ./src/views/sections/collection/collection.scss ***!
  \*******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld3Mvc2VjdGlvbnMvY29sbGVjdGlvbi9jb2xsZWN0aW9uLnNjc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdmlld3Mvc2VjdGlvbnMvY29sbGVjdGlvbi9jb2xsZWN0aW9uLnNjc3M/YzgyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/views/sections/collection/collection.scss\n");

/***/ }),

/***/ "./src/views/snippets/collection-active-filters/collection-active-filters.js":
/*!***********************************************************************************!*\
  !*** ./src/views/snippets/collection-active-filters/collection-active-filters.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n(function () {\n  if (typeof window.customElements.get('collection-active-filters') !== 'undefined') {\n    return;\n  }\n\n  window.customElements.define('collection-active-filters', /*#__PURE__*/function (_HTMLElement) {\n    _inherits(CollectionActiveFilters, _HTMLElement);\n\n    var _super = _createSuper(CollectionActiveFilters);\n\n    // eslint-disable-line\n    function CollectionActiveFilters() {\n      var _this;\n\n      _classCallCheck(this, CollectionActiveFilters);\n\n      _this = _super.call(this);\n      _this.collectionEl = document.querySelector(\"[data-filtered-collection-display=\\\"\".concat(_this.getAttribute('data-collection'), \"\\\"]\"));\n\n      if (!_this.collectionEl) {\n        return _possibleConstructorReturn(_this);\n      }\n\n      _this.initRemoveButtons();\n\n      return _this;\n    }\n\n    _createClass(CollectionActiveFilters, [{\n      key: \"initRemoveButtons\",\n      value: function initRemoveButtons() {\n        var _this2 = this;\n\n        var removeButtonEls = this.querySelectorAll('[data-remove-filter-btn]');\n        removeButtonEls.forEach(function (removeButtonEl) {\n          removeButtonEl.addEventListener('click', function (event) {\n            event.preventDefault();\n\n            _this2.collectionEl.handleUrlChange(removeButtonEl.href);\n          });\n        });\n      }\n    }]);\n\n    return CollectionActiveFilters;\n  }( /*#__PURE__*/_wrapNativeSuper(HTMLElement)));\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/views/snippets/collection-active-filters/collection-active-filters.js\n");

/***/ }),

/***/ "./src/views/snippets/collection-filters/collection-filters.js":
/*!*********************************************************************!*\
  !*** ./src/views/snippets/collection-filters/collection-filters.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n(function () {\n  if (typeof window.customElements.get('collection-filters') !== 'undefined') {\n    return;\n  }\n\n  window.customElements.define('collection-filters', /*#__PURE__*/function (_HTMLElement) {\n    _inherits(CollectionFilters, _HTMLElement);\n\n    var _super = _createSuper(CollectionFilters);\n\n    // eslint-disable-line\n    function CollectionFilters() {\n      var _this;\n\n      _classCallCheck(this, CollectionFilters);\n\n      _this = _super.call(this);\n      _this.filterOptions = _toConsumableArray(_this.querySelectorAll('[data-filter-option]'));\n      _this.removeFilterBtns = _toConsumableArray(_this.querySelectorAll('[data-remove-filter-btn]'));\n      _this.collectionEl = document.querySelector(\"[data-filtered-collection-display=\\\"\".concat(_this.getAttribute('data-collection'), \"\\\"]\"));\n      _this.form = _this.querySelector('form');\n\n      if (!_this.collectionEl) {\n        return _possibleConstructorReturn(_this);\n      }\n\n      _this.initFilterForm();\n\n      _this.initFilterFacetToggles();\n\n      return _this;\n    }\n\n    _createClass(CollectionFilters, [{\n      key: \"initFilterForm\",\n      value: function initFilterForm() {\n        var _this2 = this;\n\n        this.form.addEventListener('change', function (event) {\n          _this2.updateFilter(event);\n        });\n        this.removeFilterBtns.forEach(function (removeButton) {\n          removeButton.addEventListener('click', function (event) {\n            event.preventDefault();\n\n            _this2.collectionEl.handleUrlChange(removeButton.href);\n          });\n        });\n      }\n    }, {\n      key: \"updateFilter\",\n      value: function () {\n        var _updateFilter = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {\n          var filterParamString;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  filterParamString = new URLSearchParams(new window.FormData(this.form)).toString();\n                  _context.next = 3;\n                  return this.collectionEl.handleFilterUpdate(filterParamString, event);\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function updateFilter(_x) {\n          return _updateFilter.apply(this, arguments);\n        }\n\n        return updateFilter;\n      }()\n    }, {\n      key: \"initFilterFacetToggles\",\n      value: function initFilterFacetToggles() {\n        var _this3 = this;\n\n        var collectionStorageHandle = \"collectionStorage_\".concat(this.getAttribute('data-collection'));\n        var filterFacets = this.querySelectorAll('[data-filter-facet]');\n        this.updateFacetStates(filterFacets, collectionStorageHandle);\n        filterFacets.forEach(function (group) {\n          var groupDetails = group.querySelector('details');\n          groupDetails.addEventListener('toggle', function () {\n            _this3.saveFacetStates(filterFacets, collectionStorageHandle);\n          });\n        });\n      }\n    }, {\n      key: \"updateFacetStates\",\n      value: function updateFacetStates(filterFacets, collectionStorageHandle) {\n        var _this4 = this;\n\n        var savedFacetIdString = localStorage.getItem(collectionStorageHandle); // eslint-disable-line\n\n        if (!savedFacetIdString) {\n          return;\n        }\n\n        savedFacetIdString.split(',').forEach(function (groupID) {\n          var targetFacetDetailEl = _this4.querySelector(\"[data-filter-facet=\\\"\".concat(groupID, \"\\\"] details\"));\n\n          if (!targetFacetDetailEl) {\n            return;\n          }\n\n          targetFacetDetailEl.setAttribute('open', '');\n        });\n      }\n    }, {\n      key: \"saveFacetStates\",\n      value: function saveFacetStates(filterFacets, collectionStorageHandle) {\n        var stringOfFacetIds = _toConsumableArray(filterFacets).filter(function (facet) {\n          return facet.querySelector('details[open]');\n        }).map(function (facet) {\n          return facet.getAttribute('data-filter-facet');\n        }).join(',');\n\n        localStorage.setItem(collectionStorageHandle, stringOfFacetIds); // eslint-disable-line\n      }\n    }]);\n\n    return CollectionFilters;\n  }( /*#__PURE__*/_wrapNativeSuper(HTMLElement)));\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/views/snippets/collection-filters/collection-filters.js\n");

/***/ }),

/***/ "./src/views/snippets/collection-sorting/collection-sorting.js":
/*!*********************************************************************!*\
  !*** ./src/views/snippets/collection-sorting/collection-sorting.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n(function () {\n  if (typeof window.customElements.get('collection-sorting') !== 'undefined') {\n    return;\n  }\n\n  window.customElements.define('collection-sorting', /*#__PURE__*/function (_HTMLElement) {\n    _inherits(CollectionSorting, _HTMLElement);\n\n    var _super = _createSuper(CollectionSorting);\n\n    // eslint-disable-line\n    function CollectionSorting() {\n      var _this;\n\n      _classCallCheck(this, CollectionSorting);\n\n      _this = _super.call(this);\n      _this.sortingSelects = _this.querySelectorAll('[data-collection-sorting-select]');\n      _this.collectionEl = document.querySelector(\"[data-filtered-collection-display=\\\"\".concat(_this.getAttribute('data-collection'), \"\\\"]\"));\n      _this.form = _this.querySelector('form');\n\n      if (!_this.collectionEl) {\n        return _possibleConstructorReturn(_this);\n      }\n\n      _this.initForm();\n\n      return _this;\n    }\n\n    _createClass(CollectionSorting, [{\n      key: \"initForm\",\n      value: function initForm() {\n        var _this2 = this;\n\n        this.form.addEventListener('change', function (event) {\n          var sortParamString = new URLSearchParams(new window.FormData(_this2.form)).toString();\n\n          _this2.collectionEl.handleSortUpdate(sortParamString);\n        });\n      }\n    }]);\n\n    return CollectionSorting;\n  }( /*#__PURE__*/_wrapNativeSuper(HTMLElement)));\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/views/snippets/collection-sorting/collection-sorting.js\n");

/***/ })

/******/ });