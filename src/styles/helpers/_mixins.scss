/* ============================================================================
  Breakpoint mixin
============================================================================== */

$min: min-width;
$max: max-width;

@mixin media-query($constraint_, $viewport1_, $viewport2_: null) {
  $constraint: $constraint_;
  $viewport1: $viewport1_;
  $viewport2: $viewport2_;
  @if type-of($constraint_) == number {
    $viewport1: $constraint_;
    $viewport2: $viewport1_;
    $constraint: null;
  }
  @if $constraint == $min {
    @media screen and ($min: $viewport1) {
      @content;
    }
  } @else if $constraint == $max {
    @media screen and ($max: $viewport1) {
      @content;
    }
  } @else {
    @media screen and ($min: $viewport1) and ($max: $viewport2) {
      @content;
    }
  }
}

/* ============================================================================
  Clearfix mixin
============================================================================== */

@mixin clearfix() {
  *zoom: 1;

  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

/* ============================================================================
  Visually hidden mixin
============================================================================== */

@mixin visually-hidden() {
  position: absolute !important;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0 0 0 0);
  border: 0;
}

@mixin visually-shown($position: inherit) {
  position: $position !important;
  width: auto !important;
  height: auto !important;
  margin: 0;
  overflow: auto;
  clip: auto !important;
}

@mixin sr-only() {
  position: absolute !important; // stylelint-disable-line
  top: auto;
  left: -10000px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

/* ==============================
  Center
=========================== */

@mixin center($horizontal: true, $vertical: true) {
  position: absolute;
  @if $horizontal and $vertical {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $horizontal {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if $vertical {
    top: 50%;
    transform: translate(0, -50%);
  }
}

/* ==============================
  No <br>
=========================== */

@mixin no-br($min-max: $min, $breakpoint: $medium) {
  @include media-query($min-max, $breakpoint) {
    br {
      content: ' ';
    }
    br::after {
      content: ' ';
    }
  }
}

/* ============================================================================
  Mixin | Typography
  Font Size (px), Line Hight (px), Font Weight (400, 500, 600, etc..), Letter Spacing (%)
  -- Set $base-font-size to match the body's font-size
  Ex: typography(16, 24, 400, 2);
============================================================================== */

@mixin typography(
  $font-size,
  $line-height: normal,
  $font-weight: normal,
  $letter-spacing: 0
) {
  $base-font-size: 10;
  $font-size-rem: calc($font-size / $base-font-size);
  font-size: #{$font-size-rem}rem;

  @if $line-height == normal {
    line-height: normal;
  } @else {
    $line-height-rem: calc($line-height / $base-font-size);
    line-height: #{$line-height-rem}rem;
  }

  @if font-weight == normal {
    font-weight: 400;
  } @else {
    font-weight: #{$font-weight};
  }

  @if $letter-spacing == normal {
    letter-spacing: normal;
  } @else {
    $letter-spacing-rem: $font-size-rem * calc($letter-spacing / 100);
    letter-spacing: #{$letter-spacing-rem}rem;
  }
}
